version: '3.8'

services:
    db:
        image: postgres:16
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 3
        networks:
            - blog-network

    blog-service:
        build: ./blog-service
        env_file:
            - ./blog-service/.env
        volumes:
            - ./blog-service:/code
        working_dir: /code
        ports:
            - "8000:8000"
        depends_on:
            - db
            - redis
        stdin_open: true
        tty: true
        networks:
            - blog-network

    mongodb:
        image: mongo:latest
        logging:
            driver: none
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        ports:
            - "27017:27017"
        volumes:
            - mongo_data:/data/db
        healthcheck:
            test: ["CMD-SHELL", "mongo --eval 'db.runCommand({ connectionStatus: 1 })'"]
            interval: 10s
            timeout: 5s
            retries: 3
        networks:
            - blog-network

    user-service:
        build: ./user-service
        env_file:
            - ./user-service/.env
        volumes:
            - ./user-service:/code
        working_dir: /code
        ports:
            - "8001:8001"
        depends_on:
            - mongodb
            - redis
        stdin_open: true
        tty: true
        networks:
            - blog-network

    redis:
        image: redis:alpine
        restart: always
        ports:
            - '6379:6379'
        volumes:
            - redis:/data
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping"]
            interval: 10s
            timeout: 5s
            retries: 3

networks:
  blog-network:
    driver: bridge

volumes:
    postgres_data:
    mongo_data:
    redis:
