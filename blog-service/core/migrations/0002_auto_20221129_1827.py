# Generated by Django 3.1.1 on 2022-11-29 18:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("users", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="comment",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comment",
                to="users.bloguser",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="voters",
            field=models.ManyToManyField(
                blank=True, related_name="liked_comments", to="users.BlogUser"
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="followers",
            field=models.ManyToManyField(
                blank=True, related_name="followed_categories", to="users.BlogUser"
            ),
        ),
        migrations.AddField(
            model_name="articlecontent",
            name="article",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contents",
                to="core.article",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="articles",
                to="core.category",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="article",
                to="users.bloguser",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="voters",
            field=models.ManyToManyField(
                blank=True, related_name="liked_articles", to="users.BlogUser"
            ),
        ),
    ]
